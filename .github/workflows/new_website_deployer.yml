name: Deploy New City Website

on:
  workflow_dispatch:
    inputs:
      confirm_deployment:
        description: 'Type "DEPLOY" to confirm new repository creation'
        required: true
        default: 'DEPLOY'

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.confirm_deployment == 'DEPLOY' }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests PyGithub
        
    - name: Debug - Initial state check
      run: |
        echo "=== INITIAL STATE DEBUG ==="
        echo "Current directory: $(pwd)"
        echo "Files:"
        ls -la
        echo "--- new.txt content ---"
        cat new.txt
        echo "--- index.html first 200 chars ---"
        head -c 200 index.html
        echo ""
        echo "=========================="
        
    - name: Validate new.txt file
      run: |
        if [ ! -f "new.txt" ]; then
          echo "❌ Error: new.txt file not found"
          exit 1
        fi
        CONTENT=$(cat new.txt)
        if [[ ! "$CONTENT" =~ ^[A-Za-z]+-[A-Za-z]+$ ]]; then
          echo "❌ Error: new.txt must contain city-state format like 'Dallas-Texas'"
          exit 1
        fi
        echo "✅ Valid city-state format: $CONTENT"
        
    - name: Run Python script with enhanced debugging
      env:
        GITHUB_TOKEN: ${{ secrets.NEW7 }}
      run: |
        echo "=== STARTING PYTHON SCRIPT ==="
        python -c "
import sys
print('Python path:', sys.executable)
print('Python version:', sys.version)
"
        python new_website_deployer.py
        echo "=== PYTHON SCRIPT COMPLETED ==="
        
    - name: Debug - Check Python script output
      run: |
        echo "=== CHECKING PYTHON SCRIPT RESULTS ==="
        echo "Status files:"
        ls -la deployment_*.txt 2>/dev/null || echo "No status files found"
        
        if [ -f "deployment_success.txt" ]; then
          echo "✅ SUCCESS FILE FOUND:"
          cat deployment_success.txt
        elif [ -f "deployment_error.txt" ]; then
          echo "❌ ERROR FILE FOUND:"
          cat deployment_error.txt
        else:
          echo "⚠️ NO STATUS FILES - Script may have crashed"
        echo "================================"
        
    - name: Debug - Check if HTML was modified locally (should not be)
      run: |
        echo "=== CHECKING LOCAL HTML STATE ==="
        echo "Local index.html should NOT be modified. Checking..."
        if grep -q "Fairfield" index.html; then
          echo "❌ LOCAL HTML WAS MODIFIED - This should not happen!"
          echo "First 500 chars with Fairfield:"
          grep -A 5 -B 5 "Fairfield" index.html || echo "Pattern not found in context"
        else
          echo "✅ Local HTML unchanged (good)"
        fi
        echo "================================="
          
    - name: Cleanup status files
      if: always()
      run: |
        rm -f deployment_success.txt deployment_error.txt
